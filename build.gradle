// CRIO_SOLUTION_START_MODULE_OOP
// CRIO_SOLUTION_END_MODULE_OOP

plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

ext {
    buildId = System.currentTimeMillis()
    // Dependency versions
    springBootVersion = '2.1.8.RELEASE'
    springCoreVersion = '5.1.9.RELEASE'
    jacksonVersion = "2.9.8"
}

group = 'com.crio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter"

    // required for json layout
    compile("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
    compile("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")

    compile "org.springframework:spring-web"
    compile "com.fasterxml.jackson.core:jackson-databind"
    testCompile "junit:junit"
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}

buildDir = '/tmp/external_build'

test {
    reports {
        junitXml.enabled = true
        def destinationDirectory = System.getProperty("user.home") + "/.gradle/daemon/${buildId}/test-results"
        junitXml.destination = file(destinationDirectory)
        html.enabled = true
    }
    useJUnitPlatform {
    }
    testLogging.events("STANDARD_ERROR")
    testLogging.events("STANDARD_OUT")
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTEST RESULT: ${result.resultType}"
            println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                    "${result.successfulTestCount} SUCCEEDED, " +
                    "${result.failedTestCount} FAILED, " +
                    "${result.skippedTestCount} SKIPPED"
        }
    }
}
